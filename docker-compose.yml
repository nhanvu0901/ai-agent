services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.13.0
    container_name: ai-junior-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
    networks:
      - ai-junior-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.3.1
    container_name: ai-junior-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # GRPC
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - ai-junior-network

  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-junior-app
    ports:
      - "3000:3000"  # Web API port
      - "9229:9229"  # Node.js debugging port
    command: npm run dev:debug
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      # Don't mount node_modules as a volume!
    depends_on:
      - neo4j
      - qdrant
    env_file: .env
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - QDRANT_URL=http://qdrant:6333
      - PORT=3000
    networks:
      - ai-junior-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  ai-junior-network:
    driver: bridge

volumes:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  neo4j-plugins:
  qdrant-data: